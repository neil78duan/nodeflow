/* please do not change this file ,
 * auto create by program 
 * create time 2018-11-21 11:38:35
 *
 */

#include "logic_parser/logicApi4c.h" 
#include "nd_common/nd_common.h"

#include <stdlib.h>
#include <stdio.h>

#pragma optimize( "", off )



#ifdef _MSC_VER
#pragma comment(lib, "Ws2_32.lib")

#pragma data_seg(push, stack1, ".nfcode")
#define __nfSection__
#define SECTION_SIZE

#elif __ND_MAC__
#include <mach-o/getsect.h>
#include <mach-o/loader.h>
#include "nfsection_def.h"
#define __nfSection__ __attribute__ ((used,section("__DATA,__nfcode")))
//	const struct  section_64 *pSection = getsectbyname("__DATA", ".nftxt") ;


#if SECTION_SIZE_TYPE == 0
#define SECTION_SIZE TINY_SECTION
#elif SECTION_SIZE_TYPE == 2
#define SECTION_SIZE HUGE_SECTION
#else
#define SECTION_SIZE COMMON_SECTION
#endif

#else

#define SECTION_SIZE
#define __nfSection__ __attribute__ ((used,section("__nfcode")))

#endif

size_t binScriptLength  __nfSection__ = 0x8d;
size_t data_addr_offset __nfSection__ = OFFSET_MASK;


unsigned char __nfSection__ binScriptData[SECTION_SIZE]  = { 

0x1, 0x1, 0x1, 0xd1, 0xe4, 0xf3, 0x5b, 0x0, 0x0, 0x0, 0x0, 0x4, 0x0, 0x64, 0x75, 0x61, 
0x6e, 0xa, 0x0, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x0, 0x6b, 0x0, 
0x0, 0x0, 0x6d, 0x61, 0x69, 0x6e, 0x0, 0x35, 0x0, 0x0, 0x0, 0x2f, 0x0, 0x45, 0x3a, 0x5c, 
0x44, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5c, 0x6c, 0x69, 0x62, 0x73, 
0x5c, 0x61, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x42, 0x50, 0x5c, 0x63, 0x66, 0x67, 0x5c, 0x63, 0x6f, 
0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x2e, 0x78, 0x6d, 0x6c, 0x14, 0x0, 0x0, 0x0, 
0x0, 0x0, 0xe, 0x0, 0x6f, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x32, 0x2e, 0x30, 
0x2e, 0x32, 0xff, 0xff, 0xff, 0xff, 0x15, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 
0xb, 0x0, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64
}; 

#ifdef _MSC_VER
#pragma data_seg(pop, stack1)
#endif

static void *__get_addr_bridge()
{
	char *p = (char*)binScriptData;
	//ndfprintf(stderr,"__get_addr_bridge offset = %x data len = %x\n", (data_addr_offset^OFFSET_MASK), binScriptLength);
	return (void*)(p + (data_addr_offset^OFFSET_MASK));
}

int main(int argc, const char *argv[])
{
	int ret = logic_script_main_entry( argc, argv, __get_addr_bridge(),binScriptLength);
#ifdef _MSC_VER
	system("pause");
#else
	ndfprintf(stdout,"Press any key to continue") ;
	kbhit() ;
#endif
	return ret;
}
#pragma optimize( "", on )
